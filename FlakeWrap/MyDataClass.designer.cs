#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlakeWrap
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="InstanceData")]
	public partial class MyDataClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFlakeWrap(FlakeWrap instance);
    partial void UpdateFlakeWrap(FlakeWrap instance);
    partial void DeleteFlakeWrap(FlakeWrap instance);
    #endregion
		
		public MyDataClassDataContext() : 
				base(global::FlakeWrap.Properties.Settings.Default.InstanceDataConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FlakeWrap> FlakeWraps
		{
			get
			{
				return this.GetTable<FlakeWrap>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FlakeWrap")]
	public partial class FlakeWrap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FlakeID;
		
		private int _used;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlakeIDChanging(string value);
    partial void OnFlakeIDChanged();
    partial void OnusedChanging(int value);
    partial void OnusedChanged();
    #endregion
		
		public FlakeWrap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlakeID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FlakeID
		{
			get
			{
				return this._FlakeID;
			}
			set
			{
				if ((this._FlakeID != value))
				{
					this.OnFlakeIDChanging(value);
					this.SendPropertyChanging();
					this._FlakeID = value;
					this.SendPropertyChanged("FlakeID");
					this.OnFlakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_used", DbType="Int NOT NULL")]
		public int used
		{
			get
			{
				return this._used;
			}
			set
			{
				if ((this._used != value))
				{
					this.OnusedChanging(value);
					this.SendPropertyChanging();
					this._used = value;
					this.SendPropertyChanged("used");
					this.OnusedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
